{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nvar initialState = {\n  count: 0,\n  username: \"ming\"\n};\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      if (typeof action === \"function\") {\n        console.log(\"dispatching a function\");\n      } else {\n        console.log(\"dispatching an action\", action);\n      }\n\n      var result = next(action);\n      console.log(\"nextState\", store.getState());\n    };\n  };\n};\n\nvar addAsync = function addAsync(value) {\n  console.log(\"addAsync is triggered\", value);\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch({\n        type: \"add\",\n        payload: value\n      });\n    }, 1500);\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"add\":\n      return _objectSpread({}, state, {\n        count: state.count + action.payload\n      });\n\n    case \"update_name\":\n      return _objectSpread({}, state, {\n        username: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\naddAsync(2);\nstore.dispatch({\n  type: \"add\",\n  payload: 5\n});\nexport default function initializeStore(state) {\n  var store = createStore(reducer, _Object$assign({}, initialState, state), composeWithDevTools(applyMiddleware(logger, thunk)));\n  store.subscribe(function () {\n    console.log(\"changed\", store.getState());\n  });\n  return store;\n}","map":{"version":3,"sources":["/Users/bmyg/Desktop/nextjs/store/store.js"],"names":["createStore","compose","applyMiddleware","thunk","composeWithDevTools","initialState","count","username","logger","store","next","action","console","log","result","getState","addAsync","value","dispatch","setTimeout","type","payload","reducer","state","initializeStore","subscribe"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACxC,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAArC;AACD;;AACD,UAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAK,CAACM,QAAN,EAAzB;AACD,KAR2B;AAAA,GAAR;AAAA,CAApB;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBL,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCI,KAArC;AACA,SAAO,UAAAC,QAAQ,EAAI;AACjBC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,KADC;AAEPC,QAAAA,OAAO,EAAEJ;AAFF,OAAD,CAAR;AAID,KALS,EAKP,IALO,CAAV;AAMD,GAPD;AAQD,CAVD;;AAWA,IAAMK,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXZ,MAAW;;AACtC,UAAQA,MAAM,CAACS,IAAf;AACE,SAAK,KAAL;AACE,+BACKG,KADL;AAEEjB,QAAAA,KAAK,EAAEiB,KAAK,CAACjB,KAAN,GAAcK,MAAM,CAACU;AAF9B;;AAIF,SAAK,aAAL;AACE,+BACKE,KADL;AAEEhB,QAAAA,QAAQ,EAAEI,MAAM,CAACU;AAFnB;;AAIF;AACE,aAAOE,KAAP;AAZJ;AAcD,CAfD;;AAiBAP,QAAQ,CAAC,CAAD,CAAR;AACAP,KAAK,CAACS,QAAN,CAAe;AAAEE,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE;AAAxB,CAAf;AACA,eAAe,SAASG,eAAT,CAAyBD,KAAzB,EAAgC;AAC7C,MAAMd,KAAK,GAAGT,WAAW,CACvBsB,OADuB,EAEvB,eAAc,EAAd,EAAkBjB,YAAlB,EAAgCkB,KAAhC,CAFuB,EAGvBnB,mBAAmB,CAACF,eAAe,CAACM,MAAD,EAASL,KAAT,CAAhB,CAHI,CAAzB;AAKAM,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AACpBb,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAK,CAACM,QAAN,EAAvB;AACD,GAFD;AAGA,SAAON,KAAP;AACD","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst initialState = {\n  count: 0,\n  username: \"ming\"\n};\n\nconst logger = store => next => action => {\n  if (typeof action === \"function\") {\n    console.log(\"dispatching a function\");\n  } else {\n    console.log(\"dispatching an action\", action);\n  }\n  const result = next(action);\n  console.log(\"nextState\", store.getState());\n};\nconst addAsync = value => {\n  console.log(\"addAsync is triggered\", value);\n  return dispatch => {\n    setTimeout(() => {\n      dispatch({\n        type: \"add\",\n        payload: value\n      });\n    }, 1500);\n  };\n};\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"add\":\n      return {\n        ...state,\n        count: state.count + action.payload\n      };\n    case \"update_name\":\n      return {\n        ...state,\n        username: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\naddAsync(2);\nstore.dispatch({ type: \"add\", payload: 5 });\nexport default function initializeStore(state) {\n  const store = createStore(\n    reducer,\n    Object.assign({}, initialState, state),\n    composeWithDevTools(applyMiddleware(logger, thunk))\n  );\n  store.subscribe(() => {\n    console.log(\"changed\", store.getState());\n  });\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}