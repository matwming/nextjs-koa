{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { countState, addAsync } from \"./reducers/countReducer\";\nimport { userInitialState } from \"./reducers/userReducer\";\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      if (typeof action === \"function\") {\n        console.log(\"dispatching a function\");\n      } else {\n        console.log(\"dispatching an action\", action);\n      }\n\n      var result = next(action);\n      console.log(\"nextState\", store.getState());\n    };\n  };\n};\n\nexport default function initializeStore(state) {\n  var store = createStore(rootReducer, _Object$assign({}, {\n    count: countState,\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(logger, thunk)));\n  store.subscribe(function () {\n    console.log(\"changed\", store.getState());\n  });\n  store.dispatch({\n    type: \"add\",\n    payload: 1\n  });\n  store.dispatch(addAsync(2));\n  store.dispatch({\n    type: \"update_name\",\n    payload: \"ying\"\n  });\n  return store;\n}","map":{"version":3,"sources":["/Users/bmyg/Desktop/nextjs/store/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","composeWithDevTools","rootReducer","countState","addAsync","userInitialState","logger","store","next","action","console","log","result","getState","initializeStore","state","count","user","subscribe","dispatch","type","payload"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,yBAArC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACxC,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChCC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAArC;AACD;;AACD,UAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAK,CAACM,QAAN,EAAzB;AACD,KAR2B;AAAA,GAAR;AAAA,CAApB;;AAUA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,MAAMR,KAAK,GAAGX,WAAW,CACvBM,WADuB,EAEvB,eACE,EADF,EAEE;AACEc,IAAAA,KAAK,EAAEb,UADT;AAEEc,IAAAA,IAAI,EAAEZ;AAFR,GAFF,EAMEU,KANF,CAFuB,EAUvBd,mBAAmB,CAACH,eAAe,CAACQ,MAAD,EAASN,KAAT,CAAhB,CAVI,CAAzB;AAYAO,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AACpBR,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAK,CAACM,QAAN,EAAvB;AACD,GAFD;AAIAN,EAAAA,KAAK,CAACY,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAf;AACAd,EAAAA,KAAK,CAACY,QAAN,CAAef,QAAQ,CAAC,CAAD,CAAvB;AACAG,EAAAA,KAAK,CAACY,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAAf;AACA,SAAOd,KAAP;AACD","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { countState, addAsync } from \"./reducers/countReducer\";\nimport { userInitialState } from \"./reducers/userReducer\";\nconst logger = store => next => action => {\n  if (typeof action === \"function\") {\n    console.log(\"dispatching a function\");\n  } else {\n    console.log(\"dispatching an action\", action);\n  }\n  const result = next(action);\n  console.log(\"nextState\", store.getState());\n};\n\nexport default function initializeStore(state) {\n  const store = createStore(\n    rootReducer,\n    Object.assign(\n      {},\n      {\n        count: countState,\n        user: userInitialState\n      },\n      state\n    ),\n    composeWithDevTools(applyMiddleware(logger, thunk))\n  );\n  store.subscribe(() => {\n    console.log(\"changed\", store.getState());\n  });\n\n  store.dispatch({ type: \"add\", payload: 1 });\n  store.dispatch(addAsync(2));\n  store.dispatch({ type: \"update_name\", payload: \"ying\" });\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}