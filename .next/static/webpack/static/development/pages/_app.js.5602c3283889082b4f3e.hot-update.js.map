{"version":3,"file":"static/webpack/static/development/pages/_app.js.5602c3283889082b4f3e.hot-update.js","sources":["webpack:///./lib/withRedux.js"],"sourcesContent":["import createStore from \"../store/store\";\nimport React from \"react\";\n\nconst isServer = typeof window === \"defined\";\n\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    return createStore(initialState);\n  } else {\n    if (!window[__NEXT_REDUX_STORE__]) {\n      window[__NEXT_REDUX_STORE__] = createStore(initialState);\n    }\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default Comp => {\n  class withReduxApp extends React.Component {\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n    render() {\n      const { Component, pageProps, ...rest } = this.props;\n      console.log(Component, pageProps);\n      if (pageProps) {\n        pageProps.test = \"123\";\n      }\n\n      return (\n        <Comp\n          Component={Component}\n          pageProps={pageProps}\n          {...rest}\n          reduxStore={this.reduxStore}\n        />\n      );\n    }\n  }\n\n  withReduxApp.getInitialProps = async ctx => {\n    let appProps = {};\n    if (typeof Comp.getInitialProps === \"function\") {\n      appProps = await Comp.getInitialProps(ctx);\n    }\n    const reduxStore = getOrCreateStore();\n    return {\n      ...appProps,\n      initialReduxState: reduxStore.getState()\n    };\n  };\n  return withReduxApp;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AANA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAIA;AAJA;AAOA;AArBA;AACA;AADA;AAAA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAKA;AALA;AAQA;AARA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;;;;A","sourceRoot":""}