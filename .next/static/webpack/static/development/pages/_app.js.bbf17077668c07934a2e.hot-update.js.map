{"version":3,"file":"static/webpack/static/development/pages/_app.js.bbf17077668c07934a2e.hot-update.js","sources":["webpack:///./store/store.js"],"sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst initialState = {\n  count: 0,\n  username: \"ming\"\n};\n\nconst logger = store => next => action => {\n  if (typeof action === \"function\") {\n    console.log(\"dispatching a function\");\n  } else {\n    console.log(\"dispatching an action\", action);\n  }\n  const result = next(action);\n  console.log(\"nextState\", store.getState());\n};\nconst addAsync = value => {\n  console.log(\"addAsync is triggered\", value);\n  return dispatch => {\n    setTimeout(() => {\n      dispatch({\n        type: \"add\",\n        payload: value\n      });\n    }, 1500);\n  };\n};\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"add\":\n      return {\n        ...state,\n        count: state.count + action.payload\n      };\n    case \"update_name\":\n      return {\n        ...state,\n        username: action.payload\n      };\n    default:\n      return state;\n  }\n};\naddAsync(2);\nexport default function initializeStore(state) {\n  const store = createStore(\n    reducer,\n    Object.assign({}, initialState, state),\n    composeWithDevTools(applyMiddleware(logger, thunk))\n  );\n  store.subscribe(() => {\n    console.log(\"changed\", store.getState());\n  });\n\n  store.dispatch({ type: \"add\", payload: 5 });\n  return store;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AARA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAZA;AAcA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}